pipeline {
  agent none
  parameters {
    string (
      defaultValue: '',
      description: 'Branch name',
      name: 'branch'
    )
  }
  stages {
    stage('Clean workspace') {
      steps {
        script {
          parallel winCleanStages(['win_64', 'win_32', 'win_64_xp', 'win_32_xp'], params.branch)
        }
      }
      when {
        expression { !params.branch.isEmpty() }
      }
    }
  }
}

def winCleanStages(ArrayList labels, String branch) {
  def nodes = [:]
  String cleanDir

  labels.each { label ->
    nodesByLabel(label).each {
      nodes["${label} ${it}"] = { ->
        node(it) {
          stage("${label} ${it}") {
            cleanDir = "C:/oo/${branch}/${label}"
            dir (cleanDir) {
              deleteDir()
            }
            dir (cleanDir + "@tmp") {
              deleteDir()
            }
          }
        }
      }
    }
  }

  return nodes
}
