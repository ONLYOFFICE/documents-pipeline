pipeline {
  agent none
  parameters {
    string (
      name:         'branch',
      description:  'Branch name',
      defaultValue: ''
    )
  }
  stages {
    stage('Clean workspace') {
      steps {
        script {
          ArrayList labelList = ['win_64', 'win_32', 'win_64_xp', 'win_32_xp']
          parallel winCleanStages(labelList, params.branch)
        }
      }
      when {
        expression { !params.branch.isEmpty() }
      }
    }
  }
}

def winCleanStages(ArrayList labels, String branch) {
  Map nodes = [:]

  labels.each { label ->
    nodesByLabel(label).each {
      nodes["${label} ${it}"] = { ->
        node(it) {
          stage("${label} ${it}") {
            dir ("C:/oo/${branch}/${label}") { deleteDir() }
          }
        }
      }
    }
  }

  return nodes
}
