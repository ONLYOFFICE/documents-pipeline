pipeline {
  agent none
  parameters {
    string (
      name:         'branch',
      description:  'Branch name',
      defaultValue: ''
    )
  }
  stages {
    stage('Clean workspace') {
      steps {
        script {
          parallel winCleanStages(params.branch)
        }
      }
      when {
        expression { !params.branch.isEmpty() }
      }
    }
  }
}

def winCleanStages(String branch) {
  Map nodes = [:]
  String branchDir = branch.replaceAll(/\//,'_')

  nodesByLabel("windows").each {
    nodes["${it}"] = { ->
      node(it) {
        stage("${it}") {
          powershell "Remove-Item -Verbose -Recurse -Force C:\\oo\\${branchDir}*"
        }
      }
    }
  }

  return nodes
}
